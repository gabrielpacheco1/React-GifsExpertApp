{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNCK,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAChBN,EADgB,iDAC+BO,UAAUF,GADzC,+DAELG,MAAMR,GAFD,cAEhBS,EAFgB,gBAGHA,EAAKC,OAHF,uBAGfC,EAHe,EAGfA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATpB,kBAYfY,GAZe,4CAAF,sDCEXK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WACPjB,EAAQC,GACNiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGlB,CAACb,IAGGc,EDZwBK,CAAanB,GAA/BU,EALsB,EAK5BJ,KAAcO,EALc,EAKdA,QAUrB,OACI,qCACI,qBAAIjB,UAAW,gCAAf,6BAAgEI,KAC/Da,GAAW,4CACZ,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEtBxB2B,EAAe,WAAM,MAIMzC,mBAAS,CAAC,WAJhB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAW9B,OAEI,qCACI,sBAAKkB,UAAU,SAAf,UACI,8CACA,mBAAGA,UAAU,QAAb,gCAEJ,cAAC,EAAD,CAAalB,cAAgBA,IAC7B,mBAAGkB,UAAU,WAAb,0CACA,uBAEA,6BAEQyB,EAAWb,KAAM,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCzB7BsB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.712eadaa.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2){ //trim() elimina los espacios en blanco en los extremos del string\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue(''); \r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    //console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","    \r\n    \r\n    export const getGifs= async(category) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZawrqsOUEvOtzQcBOG2zdRpaoh78YsDr`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs= data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    //const [count, setCount] = useState(0)\r\n    //const [images, setImages] = useState([])\r\n\r\n    const {data: images, loading}= useFetchGifs(category);\r\n\r\n    /*useEffect ( () => {\r\n        getGifs(category)\r\n            .then( setImages );\r\n    }, [category]) //indica que quiero que se ejecute una sola vez, cuadno el componente se renderiza (si est√° vacio)\r\n    */\r\n\r\n    //getGifs(); prueba\r\n    \r\n    return (\r\n        <>\r\n            <h4 className= \"categoria animate__backInDown\">Resultado para: {category}</h4>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map ( img=> \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n       getGifs(category)\r\n        .then(imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category])\r\n    \r\n\r\n    return state; //{data: [], loading:true}\r\n}\r\n","import React, {useState} from 'react'\r\nimport {CategoryAdd} from './components/CategoryAdd'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    //const categories = ['Futbol', 'Cine'];\r\n    const [categories, setCategories] = useState(['Futbol']);\r\n\r\n    // const handleAdd =(e) => {\r\n    //     //setCategories(categories.concat('Cocina'));\r\n    //     setCategories(cats => [...cats, 'Cocina']);\r\n    // }\r\n\r\n    return (\r\n            \r\n        <>    \r\n            <div className=\"header\">\r\n                <h2>GifExpertApp</h2>\r\n                <p className=\"autor\">Gabriel Pacheco</p>\r\n            </div>\r\n            <CategoryAdd setCategories= {setCategories}/>\r\n            <p className=\"busqueda\">Presiona \"Enter\" para buscar</p>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map ( category=> \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}